//
// Generated file, do not edit! Created by opp_msgc 4.4 from messages/NeighbourCrashedAdvice.msg.
//

#ifndef _NEIGHBOURCRASHEDADVICE_M_H_
#define _NEIGHBOURCRASHEDADVICE_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0404
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "ProtocolMessage_m.h"
// }}



/**
 * Class generated from <tt>messages/NeighbourCrashedAdvice.msg</tt> by opp_msgc.
 * <pre>
 * message NeighbourCrashedAdvice extends ProtocolMessage
 * {
 * 	
 * 	int crashedNode;
 * 	
 * 	int crashedNodeNeighbour[];
 * }
 * </pre>
 */
class NeighbourCrashedAdvice : public ::ProtocolMessage
{
  protected:
    int crashedNode_var;
    int *crashedNodeNeighbour_var; // array ptr
    unsigned int crashedNodeNeighbour_arraysize;

  private:
    void copy(const NeighbourCrashedAdvice& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const NeighbourCrashedAdvice&);

  public:
    NeighbourCrashedAdvice(const char *name=NULL, int kind=0);
    NeighbourCrashedAdvice(const NeighbourCrashedAdvice& other);
    virtual ~NeighbourCrashedAdvice();
    NeighbourCrashedAdvice& operator=(const NeighbourCrashedAdvice& other);
    virtual NeighbourCrashedAdvice *dup() const {return new NeighbourCrashedAdvice(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getCrashedNode() const;
    virtual void setCrashedNode(int crashedNode);
    virtual void setCrashedNodeNeighbourArraySize(unsigned int size);
    virtual unsigned int getCrashedNodeNeighbourArraySize() const;
    virtual int getCrashedNodeNeighbour(unsigned int k) const;
    virtual void setCrashedNodeNeighbour(unsigned int k, int crashedNodeNeighbour);
};

inline void doPacking(cCommBuffer *b, NeighbourCrashedAdvice& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, NeighbourCrashedAdvice& obj) {obj.parsimUnpack(b);}


#endif // _NEIGHBOURCRASHEDADVICE_M_H_
